name: Release new version
description: Release python project on pypi and github

inputs:
  pre-release-tag:
    description: 'Tag for pre-release'
    default: ''
    required: true
  major-release:
    description: 'Trigger a major release. Leave empty for regular release.'
    default: ''
    required: true
  pypi-username:
    description: 'Pypi username for deployment'
    required: true
  pypi-password:
    description: 'Pypi password for deployment'
    required: true
  main-branch:
    description: 'Name of the main branch in the repo'
    default: 'main'
    required: false
    
runs:
  using: "composite"
  steps:
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install argparse build semver twine
      shell: bash
        
    - name: Setup git config
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "<>"
      shell: bash

    - name: Checkout action repo
      uses: actions/checkout@v2
      with:
        repository: firebolt-db/action-python-release
        path: release_action

    - name: Generate new version tag
      id: tag_generation
      run: |
        OLD_TAG=$(git describe --tags --abbrev=0)
        echo "Old tag was ${OLD_TAG}"
        CHANGE_LOG=$(git log $OLD_TAG..HEAD --pretty=format:%s)
        NEW_TAG=$(python3 release_action/scripts/generate_version_tag.py "${CHANGE_LOG}" $OLD_TAG --prerelease_tag "${{ inputs.pre-release-tag }}" --major_release "${{ inputs.major-release }}")
        echo "::set-output name=new_tag::$NEW_TAG"
      shell: bash

    - name: Version bump
      run: |
        # Bump version = <number> in setup.cfg
        sed -i "s/^version = .*/version = ${{ steps.tag_generation.outputs.new_tag }}/" setup.cfg
        # Verify the change
        python3 -c "from configparser import ConfigParser; c = ConfigParser(); c.read('setup.cfg'); assert c['metadata']['version'] == '${{ steps.tag_generation.outputs.new_tag }}', 'Version was not updated correctly in setup.cfg'"
        git add setup.cfg
        git commit -m "Automatic version bump to ${{ steps.tag_generation.outputs.new_tag }}"
        git push origin ${{ inputs.main-branch }}
      shell: bash
        
    - name: Publish tag on github
      run: |
        git tag ${{ steps.tag_generation.outputs.new_tag }}
        git push origin ${{ steps.tag_generation.outputs.new_tag }}
      shell: bash
        
    - name: Release on github
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag_generation.outputs.new_tag }}
        generate_release_notes: true
        prerelease: ${{ inputs.pre-release-tag != '' }}

    - name: Publish to pypi
      run: |
        python3 -m build
        python3 -m twine upload dist/*
      env:
        TWINE_USERNAME: ${{ inputs.pypi-username }}
        TWINE_PASSWORD: ${{ inputs.pypi-password }}
      shell: bash
